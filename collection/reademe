map:双列集合，用来存储一对一对的数据
    HashMap
    LinkedHashMap
    TreeMap
    HashTable
    Properties
collection:单列集合，存储一个一个的对象
    list:存储有序的，可重复的数据-->动态数组
        ArrayList
        linkedList
        Vector
    set:存储无序的，不可重复的数据
        HashSet
        LinkedHashSet
        TreeSet

使用Iterator接口遍历集合元素
    Iterator对象称为迭代器(设计模式的一种),主要用于遍历Collection集合中的元素.
    GOF给迭代器模式的定义为：提供一种方法访问一个容器（container）对象中各个元素,而又不暴露该对象的内部细节。
    迭代器模式,就是为容器而生.类似于公交车上的售票员,火车上的乘务员,空姐

    Collection接口继承了java.lang.Iterable接口,该接口有一个iterator()方法,那么所有实现了Collection接口的集合类都有一个iterator()方法,用以返回一个实现了Iterator接口的对象.
    Iterator仅用于遍历集合,Iterator本身并不提供承装对象的能力.如果需要创建Iterator对象,则必须有一个被迭代的集合.

    集合对象每次调用iterator()方法都得到一个全新的迭代器对象,默认游标都在集合的第一个元素之前.

List接口(动态数组)概述
    鉴于java中数组用来存储数据的局限性,我们通常用List替代数组
    List集合类中元素有序,且可重复.集合中的每个元素都有其对应的顺序索引.
    List容器中的元素都对应一个整数型的序号记载其在容器的未知,可以根据序号存取容器中的元素.
    JDK API中List接口的实现类常用的有:ArrayList,LinkedList和Vector

Set接口:存储无序的,不可重复的数据.
    HashSet:Set接口的主要实现类.线程不安全,可以存储null值
        LinkedHashSet:作为HashSet的子类,遍历其内部数据时,可以按照添加的顺序遍历.

    TreeSet:底层使用二叉树(红黑树)存储,要求放入TreeSet中必须是同一类型.因此可以按照添加对象的指定属性,进行排序.



























